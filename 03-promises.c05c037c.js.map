{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,UAAWL,SAASC,cAAc,0BA8BpC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EAEFF,EAAQ,uBAAqBH,QAAiBC,OAG9CG,EAAO,sBAAoBJ,QAAeC,SAE3CA,MAvCPV,EAAKC,KAAKiB,iBAAiB,UAEzB,SAAsBC,GACtBA,EAAIC,iBACJ,IAAIV,MAAEA,EAAKW,KAAEA,EAAIC,OAAEA,GAgBZ,CACLZ,MAAOa,OAAOvB,EAAKI,WAAWoB,OAC9BH,KAAME,OAAOvB,EAAKK,UAAUmB,OAC5BF,OAAQC,OAAOvB,EAAKM,YAAYkB,QAdlC,IAAK,IAAIf,EAAW,EAAGA,GAAYa,EAAQb,GAAY,EAGrDD,EAAcC,EAAUC,GACrBe,MAAKC,GAAU5B,EAAA6B,OAAOC,QAAQF,KAC9BG,OAAMC,GAAShC,EAAA6B,OAAOI,QAAQD,KACjCpB,GAASW","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  inputDelay: document.querySelector(`input[name='delay']`),\n  inputStep: document.querySelector(`input[name='step']`),\n  inputAmount: document.querySelector(`input[name='amount']`),\n  submitBtn: document.querySelector(`button[type='submit']`),\n}\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\n  function onSubmitForm(evt) {\n  evt.preventDefault();\n  let { delay, step, amount } = onGetDate();\n\n  // let amount = Number(refs.inputAmount.value);\n  // let delay = Number(refs.inputDelay.value);\n  // let step = Number(refs.inputStep.value);\n  for (let position = 1; position <= amount; position += 1) {\n    // console.log('step', step);\n    // console.log('delay', delay);\n    createPromise(position, delay)\n      .then(result => Notify.success(result))\n      .catch(error => Notify.failure(error));\n    delay += step;\n  }\n  }\n\n  function onGetDate() {\n  return {\n    delay: Number(refs.inputDelay.value),\n    step: Number(refs.inputStep.value),\n    amount: Number(refs.inputAmount.value),\n  };\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n    \n  });  \n}\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","inputDelay","inputStep","inputAmount","submitBtn","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","step","amount","Number","value","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.c05c037c.js.map"}